import { PlotMouseEvent } from 'plotly.js-dist-min';
import { BeforePlotEvent, ClickAnnotationEvent, FrameAnimationEvent, LegendClickEvent, PlotHoverEvent, PlotRelayoutEvent, PlotRestyleEvent, PlotSelectionEvent, SliderChangeEvent, SliderEndEvent, SliderStartEvent, SunburstClickEvent } from 'plotly.js';
export type plotlyEventNames = 'plotly_click' | 'plotly_unhover' | 'plotly_hover' | 'plotly_selecting' | 'plotly_selected' | 'plotly_restyle' | 'plotly_relayout' | 'plotly_relayouting' | 'plotly_clickannotation' | 'plotly_animatingframe' | 'plotly_legendclick' | 'plotly_legenddoubleclick' | 'plotly_sliderchange' | 'plotly_sliderend' | 'plotly_sliderstart' | 'plotly_sunburstclick' | 'plotly_event' | 'plotly_beforeplot' | 'plotly_afterexport' | 'plotly_afterplot' | 'plotly_animated' | 'plotly_animationinterrupted' | 'plotly_autosize' | 'plotly_beforeexport' | 'plotly_deselect' | 'plotly_doubleclick' | 'plotly_framework' | 'plotly_redraw' | 'plotly_transitioning' | 'plotly_transitioninterrupted';
export type PlotlyEvents = {
    onPlotlyClick: (event: PlotMouseEvent) => void;
    onPlotlyUnhover: (event: PlotMouseEvent) => void;
    onPlotlyHover: (event: PlotHoverEvent) => void;
    onPlotlySelecting: (event: PlotSelectionEvent) => void;
    onPlotlySelected: (event: PlotSelectionEvent) => void;
    onPlotlyRestyle: (event: PlotRestyleEvent) => void;
    onPlotlyRelayout: (event: PlotRelayoutEvent) => void;
    onPlotlyRelayouting: (event: PlotRelayoutEvent) => void;
    onPlotlyClickAnnotation: (event: ClickAnnotationEvent) => void;
    onPlotlyAnimatingFrame: (event: FrameAnimationEvent) => void;
    onPlotlyLegendClick: (event: LegendClickEvent) => void;
    onPlotlyLegendDoubleClick: (event: LegendClickEvent) => void;
    onPlotlySliderChange: (event: SliderChangeEvent) => void;
    onPlotlySliderEnd: (event: SliderEndEvent) => void;
    onPlotlySliderStart: (event: SliderStartEvent) => void;
    onPlotlySunburstClick: (event: SunburstClickEvent) => void;
    onPlotlyEvent: (data: unknown) => void;
    onPlotlyBeforePlot: (event: BeforePlotEvent) => void;
    onPlotlyAfterExport: () => void;
    onPlotlyAfterPlot: () => void;
    onPlotlyAnimated: () => void;
    onPlotlyAnimationInterrupted: () => void;
    onPlotlyAutosize: () => void;
    onPlotlyBeforeExport: () => void;
    onPlotlyDeselect: () => void;
    onPlotlyDoubleClick: () => void;
    onPlotlyFramework: () => void;
    onPlotlyRedraw: () => void;
    onPlotlyTransitioning: () => void;
    onPlotlyTransitionInterrupted: () => void;
};
export declare const plotlyEventHandlerMap: {
    [K in plotlyEventNames]: keyof PlotlyEvents;
};
export declare const plotlyEventHandlerMapInverted: {
    onPlotlyClick: plotlyEventNames;
    onPlotlyUnhover: plotlyEventNames;
    onPlotlyHover: plotlyEventNames;
    onPlotlySelecting: plotlyEventNames;
    onPlotlySelected: plotlyEventNames;
    onPlotlyRestyle: plotlyEventNames;
    onPlotlyRelayout: plotlyEventNames;
    onPlotlyRelayouting: plotlyEventNames;
    onPlotlyClickAnnotation: plotlyEventNames;
    onPlotlyAnimatingFrame: plotlyEventNames;
    onPlotlyLegendClick: plotlyEventNames;
    onPlotlyLegendDoubleClick: plotlyEventNames;
    onPlotlySliderChange: plotlyEventNames;
    onPlotlySliderEnd: plotlyEventNames;
    onPlotlySliderStart: plotlyEventNames;
    onPlotlySunburstClick: plotlyEventNames;
    onPlotlyEvent: plotlyEventNames;
    onPlotlyBeforePlot: plotlyEventNames;
    onPlotlyAfterExport: plotlyEventNames;
    onPlotlyAfterPlot: plotlyEventNames;
    onPlotlyAnimated: plotlyEventNames;
    onPlotlyAnimationInterrupted: plotlyEventNames;
    onPlotlyAutosize: plotlyEventNames;
    onPlotlyBeforeExport: plotlyEventNames;
    onPlotlyDeselect: plotlyEventNames;
    onPlotlyDoubleClick: plotlyEventNames;
    onPlotlyFramework: plotlyEventNames;
    onPlotlyRedraw: plotlyEventNames;
    onPlotlyTransitioning: plotlyEventNames;
    onPlotlyTransitionInterrupted: plotlyEventNames;
};
